#!/usr/bin/env python3
import json
import datetime
import random
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(os.path.dirname(__file__))
from telegram_notifier import send_telegram_message, format_commit_message

def generate_commit_data():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–º–º–∏—Ç–∞"""
    activities = [
        "–†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥–∞",
        "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏", 
        "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–ø–µ—á–∞—Ç–æ–∫",
        "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
        "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤",
        "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π",
        "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π",
        "–£–ª—É—á—à–µ–Ω–∏–µ README",
        "–ë–∞–≥–æ—Ñ–∏–∫—Å–∏–Ω–≥",
        "–ö–æ–¥ —Ä–µ–≤—å—é",
        "–£–ª—É—á—à–µ–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã",
        "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤"
    ]
    
    filename = "activities.json"
    
    # –ß–∏—Ç–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    if os.path.exists(filename):
        with open(filename, 'r', encoding='utf-8') as f:
            try:
                data = json.load(f)
            except json.JSONDecodeError:
                data = {"commits": [], "statistics": {}}
    else:
        data = {"commits": [], "statistics": {}}
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
    current_time = datetime.datetime.utcnow()
    new_commit = {
        "timestamp": current_time.isoformat(),
        "message": f"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–∏—Ç –æ—Ç {current_time.strftime('%Y-%m-%d %H:%M:%S')}",
        "random_number": random.randint(1, 1000),
        "activity": random.choice(activities),
        "weekday": current_time.strftime("%A"),
        "commit_hash": f"auto_{current_time.strftime('%Y%m%d_%H%M%S')}"
    }
    
    data["commits"].append(new_commit)
    total_commits = len(data["commits"])
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    week_ago = current_time - datetime.timedelta(days=7)
    weekly_commits = len([
        c for c in data["commits"] 
        if datetime.datetime.fromisoformat(c["timestamp"]).date() >= week_ago.date()
    ])
    
    data["statistics"] = {
        "total_commits": total_commits,
        "last_updated": current_time.isoformat(),
        "this_week_commits": weekly_commits,
        "this_month_commits": len([
            c for c in data["commits"] 
            if datetime.datetime.fromisoformat(c["timestamp"]).month == current_time.month
        ])
    }
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    with open(filename, 'w', encoding='utf-8') as f:
        json.dump(data, f, indent=2, ensure_ascii=False)
    
    print(f"‚úÖ –§–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω! –í—Å–µ–≥–æ –∫–æ–º–º–∏—Ç–æ–≤: {total_commits}")
    
    return {
        "total_commits": total_commits,
        "weekly_commits": weekly_commits,
        "current_commit": new_commit,
        "filename": filename
    }

def main():
    try:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–º–º–∏—Ç–∞
        commit_data = generate_commit_data()
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
        message = format_commit_message(commit_data)
        success = send_telegram_message(message)
        
        if success:
            print("üì± –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram")
        else:
            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram")
            
        return commit_data
        
    except Exception as e:
        error_message = f"‚ùå <b>–û—à–∏–±–∫–∞ –≤ Git Auto-Commit</b>\n\n"
        error_message += f"<b>–û—à–∏–±–∫–∞:</b> {str(e)}\n"
        error_message += f"<b>–í—Ä–µ–º—è:</b> {datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')}"
        
        send_telegram_message(error_message)
        raise e

if __name__ == "__main__":
    main()